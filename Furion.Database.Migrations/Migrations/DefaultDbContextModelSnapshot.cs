// <auto-generated />
using System;
using Furion.EntityFramework.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Furion.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Chinese_PRC_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Furion.Core.Models.DataRelaTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DataCategory")
                        .HasColumnType("int");

                    b.Property<int?>("DataCode")
                        .HasColumnType("int");

                    b.Property<string>("DataDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("DataDoRange")
                        .HasColumnType("float");

                    b.Property<string>("DataName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DataState")
                        .HasColumnType("int");

                    b.Property<int?>("DataType")
                        .HasColumnType("int");

                    b.Property<double?>("DataUpRange")
                        .HasColumnType("float");

                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DBName");

                    b.Property<double?>("DefaultValue")
                        .HasColumnType("float")
                        .HasColumnName("Default_Value");

                    b.Property<double?>("LastDelt")
                        .HasColumnType("float")
                        .HasColumnName("lastDelt");

                    b.Property<int?>("LastDeltState")
                        .HasColumnType("int")
                        .HasColumnName("lastDeltState");

                    b.Property<int?>("LastState")
                        .HasColumnType("int")
                        .HasColumnName("lastState");

                    b.Property<DateTime?>("LastTime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastTime");

                    b.Property<double?>("LastValue")
                        .HasColumnType("float")
                        .HasColumnName("lastValue");

                    b.Property<int>("NDraiPumpType")
                        .HasColumnType("int")
                        .HasColumnName("N_DRAI_PUMP_TYPE");

                    b.Property<string>("SysCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sysCode");

                    b.Property<string>("Tbname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TBName");

                    b.Property<int?>("TimeToleran")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOWN");

                    b.Property<string>("WarnDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WellCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WellName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DataRelaTable", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.FileUploader", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("FullPath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("Path")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("FileUploader", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.GwtableHi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DataCode")
                        .HasColumnType("int");

                    b.Property<string>("DataName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("DataState")
                        .HasColumnType("int");

                    b.Property<double>("DataValue")
                        .HasColumnType("float");

                    b.Property<double?>("DeltValue")
                        .HasColumnType("float")
                        .HasColumnName("deltValue");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<DateTime>("GetInfoTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime");

                    b.Property<double?>("RawValue")
                        .HasColumnType("float")
                        .HasColumnName("rawValue");

                    b.Property<int?>("TimeSpan")
                        .HasColumnType("int");

                    b.Property<string>("WellCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GWTableHis", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysAnnouncement", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_SYSANNOUNCEMENT");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysAnnouncement", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysDepartment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_SYSDEPARTMENT");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ParentId");

                    b.ToTable("SysDepartment", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysDocument", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<int?>("Download")
                        .HasColumnType("int");

                    b.Property<string>("FullPath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("Path")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SysDocument", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysDocumentTalk", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int?>("Bad")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Research");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<int?>("Good")
                        .HasColumnType("int");

                    b.Property<string>("SysDocumentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("SysDocumentId");

                    b.ToTable("SysDocumentTalk", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysEmail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("MailType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Mail_type");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ReplyEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Reply_email");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SysMailId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("SysMailId");

                    b.ToTable("SysEmail", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysEmailTemp", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("IsDefault")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("RadioButton");

                    b.Property<string>("MailName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Mail_name");

                    b.Property<string>("MailType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Mail_type");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ReplyEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Reply_email");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_mail_info2");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysEmailTemp", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysException", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("LeiXing")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("Research");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Result")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_SYSEXCEPTION");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysException", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysField", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MyColums")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MyTables")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MyTexts")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_SYSFIELD");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "MyTables", "MyColums" }, "Index_1");

                    b.ToTable("SysField", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("Ip")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("MenuId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Message")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("Research");

                    b.Property<string>("PersonId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Result")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("ResearchDropDown");

                    b.HasKey("Id")
                        .HasName("PK_SYSLOG");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysLog", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("BigIconic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Iconic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IsLeaf")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("RadioButtonResearch");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("SysMenu", (string)null);

                    b.HasComment("导航栏");
                });

            modelBuilder.Entity("Furion.Core.Models.SysMenuOld", b =>
                {
                    b.Property<string>("BigIconic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Iconic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IsLeaf")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ParentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("SysMenu_old", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysMenuSysRoleSysOperation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysMenuId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysOperationId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysRoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("SysMenuId");

                    b.HasIndex("SysOperationId");

                    b.HasIndex("SysRoleId");

                    b.ToTable("SysMenuSysRoleSysOperation", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Content")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("MessageType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SysMessageTempId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("SysMessageTempId");

                    b.ToTable("SysMessage", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysMessageTemp", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Content")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("IsDefault")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("RadioButton");

                    b.Property<string>("MessageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MessageType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_mail_info");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysMessageTemp", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysNotice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<DateTime?>("LostTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("Message")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("PersonId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK_SYSNOTICE");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysNotice", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysOperation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("Research");

                    b.Property<string>("Function")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Iconic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Equal");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("ResearchDropDown");

                    b.HasKey("Id")
                        .HasName("PK_SYSOPERATION");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("SysOperation", (string)null);

                    b.HasComment("操作");
                });

            modelBuilder.Entity("Furion.Core.Models.SysPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ChangePwd")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangePwdTime")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("ProvinceCascade");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Hdpic")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("HDpic");

                    b.Property<string>("LastLogonIp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LastLogonIP");

                    b.Property<DateTime?>("LastLogonTime")
                        .HasColumnType("datetime");

                    b.Property<string>("LogonIp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LogonIP");

                    b.Property<int?>("LogonNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogonTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MobilePhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("PageStyle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Display");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Position")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Province")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("DropDown");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Sex")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("DropDown");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("RadioButtonResearch");

                    b.Property<string>("SurePassword")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SysDepartmentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToKen")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Village")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("CityCascade");

                    b.HasKey("Id")
                        .HasName("PK_SYSPERSON");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("SysDepartmentId");

                    b.HasIndex(new[] { "Name" }, "Index_1")
                        .HasDatabaseName("Index_11");

                    b.ToTable("SysPerson", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysPerson20230717", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Hdpic")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("HDpic");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("LastLogonIp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LastLogonIP");

                    b.Property<DateTime?>("LastLogonTime")
                        .HasColumnType("datetime");

                    b.Property<string>("LogonIp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LogonIP");

                    b.Property<int?>("LogonNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogonTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MobilePhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PageStyle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Position")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Province")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Sex")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SurePassword")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SysDepartmentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ToKen")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Village")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("SysPerson20230717", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CreatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Research");

                    b.Property<string>("UpdatePerson")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("SysRole", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysRoleSysPerson", b =>
                {
                    b.Property<string>("SysPersonId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysRoleId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasIndex("SysPersonId");

                    b.HasIndex("SysRoleId");

                    b.ToTable("SysRoleSysPerson", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.TDrainuser", b =>
                {
                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_TIME");

                    b.Property<decimal?>("NJd")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("N_JD");

                    b.Property<decimal?>("NWd")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("N_WD");

                    b.Property<DateTime?>("OperateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("OPERATE_TIME");

                    b.Property<string>("QppshTableId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("QPPSH_TABLE_ID");

                    b.Property<string>("SAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_ADDRESS");

                    b.Property<string>("SArea")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_AREA");

                    b.Property<string>("SInMan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("s_IN_MAN");

                    b.Property<string>("SName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_NAME");

                    b.Property<string>("SNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_NO");

                    b.Property<string>("SStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("s_status");

                    b.Property<string>("STown")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_TOWN");

                    b.Property<string>("SType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_TYPE");

                    b.Property<string>("SXkh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("S_XKH");

                    b.Property<string>("Stamp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("STAMP");

                    b.Property<decimal?>("Status")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("STATUS");

                    b.ToTable("T_DRAINUSER", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.TDrainuserpicture", b =>
                {
                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("date")
                        .HasColumnName("CREATE_TIME");

                    b.Property<string>("FileUploaderId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FILE_UPLOADER_ID");

                    b.Property<decimal?>("FileUploaderStatus")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("FILE_UPLOADER_STATUS");

                    b.Property<string>("FullPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FULL_PATH");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("IdIndex")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("ID_INDEX");

                    b.Property<DateTime?>("OperateTime")
                        .HasColumnType("date")
                        .HasColumnName("OPERATE_TIME");

                    b.Property<string>("Stamp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("STAMP");

                    b.Property<decimal?>("TypeId")
                        .HasColumnType("numeric(38,8)")
                        .HasColumnName("TYPE_ID");

                    b.Property<string>("WbId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("WB_ID");

                    b.ToTable("T_DRAINUSERPICTURE", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.TOnlineNewSsdata", b =>
                {
                    b.Property<long>("Sid")
                        .HasColumnType("bigint")
                        .HasColumnName("SID");

                    b.Property<string>("StdId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Std_id");

                    b.Property<int?>("ClrCodtocdt")
                        .HasColumnType("int")
                        .HasColumnName("clr_codtocdt");

                    b.Property<int?>("ClrD009")
                        .HasColumnType("int")
                        .HasColumnName("clr_d009");

                    b.Property<int?>("ClrD010")
                        .HasColumnType("int")
                        .HasColumnName("clr_d010");

                    b.Property<int?>("ClrD011")
                        .HasColumnType("int")
                        .HasColumnName("clr_d011");

                    b.Property<int?>("ClrD012")
                        .HasColumnType("int")
                        .HasColumnName("clr_d012");

                    b.Property<int?>("ClrDatetime")
                        .HasColumnType("int")
                        .HasColumnName("clr_datetime");

                    b.Property<double?>("Cod")
                        .HasColumnType("float")
                        .HasColumnName("cod");

                    b.Property<DateTime?>("Codtocdt")
                        .HasColumnType("datetime")
                        .HasColumnName("codtocdt");

                    b.Property<string>("Codtocfault")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODTOCFAULT");

                    b.Property<int?>("Codtocftval")
                        .HasColumnType("int")
                        .HasColumnName("CODTOCFTVAL");

                    b.Property<string>("Codtocstate")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODTOCSTATE");

                    b.Property<int?>("Codtocstval")
                        .HasColumnType("int")
                        .HasColumnName("CODTOCSTVAL");

                    b.Property<string>("Codtoctime")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("codtoctime");

                    b.Property<string>("Codtocwarning")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODTOCWARNING");

                    b.Property<int?>("Codtocwnval")
                        .HasColumnType("int")
                        .HasColumnName("CODTOCWNVAL");

                    b.Property<string>("ComId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Com_id");

                    b.Property<string>("D009")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d009");

                    b.Property<string>("D010")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d010");

                    b.Property<string>("D011")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d011");

                    b.Property<string>("D012")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d012");

                    b.Property<string>("DataDt")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("data_dt");

                    b.Property<DateTime?>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("District")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DspName")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("dsp_name");

                    b.Property<string>("FactId")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("FACT_ID");

                    b.Property<int?>("Factxs")
                        .HasColumnType("int")
                        .HasColumnName("factxs");

                    b.Property<double?>("Flag")
                        .HasColumnType("float")
                        .HasColumnName("flag");

                    b.Property<string>("Info")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("info");

                    b.Property<string>("JckName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Jckid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCKID");

                    b.Property<int?>("Jcktype")
                        .HasColumnType("int")
                        .HasColumnName("JCKTYPE");

                    b.Property<double?>("Ljll")
                        .HasColumnType("float")
                        .HasColumnName("ljll");

                    b.Property<double?>("Nh3n")
                        .HasColumnType("float")
                        .HasColumnName("NH3N");

                    b.Property<decimal?>("Outamount")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("outamount");

                    b.Property<double?>("Ph")
                        .HasColumnType("float")
                        .HasColumnName("ph");

                    b.Property<double?>("Ssll")
                        .HasColumnType("float")
                        .HasColumnName("ssll");

                    b.Property<double?>("Tn")
                        .HasColumnType("float")
                        .HasColumnName("TN");

                    b.Property<double?>("Toc")
                        .HasColumnType("float")
                        .HasColumnName("toc");

                    b.Property<double?>("Tp")
                        .HasColumnType("float")
                        .HasColumnName("TP");

                    b.Property<double?>("Wt")
                        .HasColumnType("float")
                        .HasColumnName("wt");

                    b.Property<double?>("Yw")
                        .HasColumnType("float")
                        .HasColumnName("yw");

                    b.HasKey("Sid", "StdId")
                        .HasName("PK_dbo.tOnline_New_SSDatas");

                    b.ToTable("tOnline_New_SSDatas", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.TOnlineNewSsdatasHi", b =>
                {
                    b.Property<long>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sid"), 1L, 1);

                    b.Property<int?>("ClrCodtocdt")
                        .HasColumnType("int")
                        .HasColumnName("clr_codtocdt");

                    b.Property<int?>("ClrD009")
                        .HasColumnType("int")
                        .HasColumnName("clr_d009");

                    b.Property<int?>("ClrD010")
                        .HasColumnType("int")
                        .HasColumnName("clr_d010");

                    b.Property<int?>("ClrD011")
                        .HasColumnType("int")
                        .HasColumnName("clr_d011");

                    b.Property<int?>("ClrD012")
                        .HasColumnType("int")
                        .HasColumnName("clr_d012");

                    b.Property<int?>("ClrDatetime")
                        .HasColumnType("int")
                        .HasColumnName("clr_datetime");

                    b.Property<double?>("Cod")
                        .HasColumnType("float")
                        .HasColumnName("cod");

                    b.Property<DateTime?>("Codtocdt")
                        .HasColumnType("datetime")
                        .HasColumnName("codtocdt");

                    b.Property<string>("Codtocfault")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODTOCFAULT");

                    b.Property<int?>("Codtocftval")
                        .HasColumnType("int")
                        .HasColumnName("CODTOCFTVAL");

                    b.Property<string>("Codtocstate")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODTOCSTATE");

                    b.Property<int?>("Codtocstval")
                        .HasColumnType("int")
                        .HasColumnName("CODTOCSTVAL");

                    b.Property<string>("Codtoctime")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("codtoctime");

                    b.Property<string>("Codtocwarning")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CODTOCWARNING");

                    b.Property<int?>("Codtocwnval")
                        .HasColumnType("int")
                        .HasColumnName("CODTOCWNVAL");

                    b.Property<string>("ComId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Com_id");

                    b.Property<string>("D009")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d009");

                    b.Property<string>("D010")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d010");

                    b.Property<string>("D011")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d011");

                    b.Property<string>("D012")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("d012");

                    b.Property<string>("DataDt")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("data_dt");

                    b.Property<DateTime?>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<string>("District")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DspName")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("dsp_name");

                    b.Property<string>("FactId")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("FACT_ID");

                    b.Property<int?>("Factxs")
                        .HasColumnType("int")
                        .HasColumnName("factxs");

                    b.Property<double?>("Flag")
                        .HasColumnType("float")
                        .HasColumnName("flag");

                    b.Property<string>("Info")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("info");

                    b.Property<string>("JckName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Jckid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JCKID");

                    b.Property<int?>("Jcktype")
                        .HasColumnType("int")
                        .HasColumnName("JCKTYPE");

                    b.Property<double?>("Ljll")
                        .HasColumnType("float")
                        .HasColumnName("ljll");

                    b.Property<double?>("Nh3n")
                        .HasColumnType("float")
                        .HasColumnName("NH3N");

                    b.Property<decimal?>("Outamount")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("outamount");

                    b.Property<double?>("Ph")
                        .HasColumnType("float")
                        .HasColumnName("ph");

                    b.Property<double?>("Ssll")
                        .HasColumnType("float")
                        .HasColumnName("ssll");

                    b.Property<string>("StdId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Std_id");

                    b.Property<double?>("Tn")
                        .HasColumnType("float")
                        .HasColumnName("TN");

                    b.Property<double?>("Toc")
                        .HasColumnType("float")
                        .HasColumnName("toc");

                    b.Property<double?>("Tp")
                        .HasColumnType("float")
                        .HasColumnName("TP");

                    b.Property<double?>("Wt")
                        .HasColumnType("float")
                        .HasColumnName("wt");

                    b.Property<double?>("Yw")
                        .HasColumnType("float")
                        .HasColumnName("yw");

                    b.HasKey("Sid")
                        .HasName("PK_dbo.tOnline_New_SSDatas_his");

                    b.ToTable("tOnline_New_SSDatas_his", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.TRtrptPumpHi", b =>
                {
                    b.Property<decimal>("NId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("N_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("NId"), 1L, 1);

                    b.Property<decimal?>("Bod")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("BOD");

                    b.Property<decimal?>("Bzssll")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("BZSSLL");

                    b.Property<int?>("Cckg")
                        .HasColumnType("int")
                        .HasColumnName("CCKG");

                    b.Property<decimal?>("Cod")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("COD");

                    b.Property<decimal?>("Ljll")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("LJLL");

                    b.Property<decimal?>("NDraiPumpType")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_DRAI_PUMP_TYPE");

                    b.Property<decimal?>("NDraiPumpTypeFeat")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_DRAI_PUMP_TYPE_FEAT");

                    b.Property<decimal?>("NKaijitaishu")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_KAIJITAISHU");

                    b.Property<decimal?>("NLiuliang")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_LIULIANG");

                    b.Property<decimal?>("NRunning")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("N_RUNNING");

                    b.Property<decimal?>("NShuiwei")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_SHUIWEI");

                    b.Property<decimal?>("NTaishu")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_TAISHU");

                    b.Property<decimal?>("NWaiyewei")
                        .HasColumnType("decimal(10,1)")
                        .HasColumnName("N_WAIYEWEI");

                    b.Property<decimal?>("NYewei")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_YEWEI");

                    b.Property<decimal?>("NYuliang")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_YULIANG");

                    b.Property<decimal?>("Nh3n")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("NH3N");

                    b.Property<decimal?>("Ph")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("PH");

                    b.Property<string>("SDraiPumpId")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("S_DRAI_PUMP_ID");

                    b.Property<int?>("SLljs")
                        .HasColumnType("int")
                        .HasColumnName("S_LLJS");

                    b.Property<string>("SPumpstatus")
                        .HasMaxLength(38)
                        .IsUnicode(false)
                        .HasColumnType("varchar(38)")
                        .HasColumnName("S_PUMPSTATUS");

                    b.Property<string>("SSname")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)")
                        .HasColumnName("S_SNAME");

                    b.Property<decimal?>("Ss")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SS");

                    b.Property<decimal?>("Ssll1")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL1");

                    b.Property<decimal?>("Ssll10")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL10");

                    b.Property<decimal?>("Ssll11")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL11");

                    b.Property<decimal?>("Ssll12")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL12");

                    b.Property<decimal?>("Ssll2")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL2");

                    b.Property<decimal?>("Ssll3")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL3");

                    b.Property<decimal?>("Ssll4")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL4");

                    b.Property<decimal?>("Ssll5")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL5");

                    b.Property<decimal?>("Ssll6")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL6");

                    b.Property<decimal?>("Ssll7")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL7");

                    b.Property<decimal?>("Ssll8")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL8");

                    b.Property<decimal?>("Ssll9")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL9");

                    b.Property<DateTime?>("TStime")
                        .HasColumnType("datetime")
                        .HasColumnName("T_STIME");

                    b.Property<decimal?>("Tn")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("TN");

                    b.Property<decimal?>("Toc")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("TOC");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TOWN");

                    b.Property<decimal?>("Tp")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("TP");

                    b.HasKey("NId")
                        .HasName("PK_dbo.T_RTRPT_PUMP_HIS");

                    b.ToTable("T_RTRPT_PUMP_HIS", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.TRtrptPumpHisHi", b =>
                {
                    b.Property<decimal>("NId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("N_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("NId"), 1L, 1);

                    b.Property<decimal?>("Bod")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("BOD");

                    b.Property<decimal?>("Bzssll")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("BZSSLL");

                    b.Property<int?>("Cckg")
                        .HasColumnType("int")
                        .HasColumnName("CCKG");

                    b.Property<decimal?>("Cod")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("COD");

                    b.Property<decimal?>("Ljll")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("LJLL");

                    b.Property<decimal?>("NDraiPumpType")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_DRAI_PUMP_TYPE");

                    b.Property<decimal?>("NDraiPumpTypeFeat")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_DRAI_PUMP_TYPE_FEAT");

                    b.Property<decimal?>("NKaijitaishu")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_KAIJITAISHU");

                    b.Property<decimal?>("NLiuliang")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_LIULIANG");

                    b.Property<decimal?>("NRunning")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("N_RUNNING");

                    b.Property<decimal?>("NShuiwei")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_SHUIWEI");

                    b.Property<decimal?>("NTaishu")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_TAISHU");

                    b.Property<decimal?>("NWaiyewei")
                        .HasColumnType("decimal(10,1)")
                        .HasColumnName("N_WAIYEWEI");

                    b.Property<decimal?>("NYewei")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_YEWEI");

                    b.Property<decimal?>("NYuliang")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("N_YULIANG");

                    b.Property<decimal?>("Nh3n")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("NH3N");

                    b.Property<decimal?>("Ph")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("PH");

                    b.Property<string>("SDraiPumpId")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("S_DRAI_PUMP_ID");

                    b.Property<int?>("SLljs")
                        .HasColumnType("int")
                        .HasColumnName("S_LLJS");

                    b.Property<string>("SPumpstatus")
                        .HasMaxLength(38)
                        .IsUnicode(false)
                        .HasColumnType("varchar(38)")
                        .HasColumnName("S_PUMPSTATUS");

                    b.Property<string>("SSname")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)")
                        .HasColumnName("S_SNAME");

                    b.Property<decimal?>("Ss")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SS");

                    b.Property<decimal?>("Ssll1")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL1");

                    b.Property<decimal?>("Ssll10")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL10");

                    b.Property<decimal?>("Ssll11")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL11");

                    b.Property<decimal?>("Ssll12")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL12");

                    b.Property<decimal?>("Ssll2")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL2");

                    b.Property<decimal?>("Ssll3")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL3");

                    b.Property<decimal?>("Ssll4")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL4");

                    b.Property<decimal?>("Ssll5")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL5");

                    b.Property<decimal?>("Ssll6")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL6");

                    b.Property<decimal?>("Ssll7")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL7");

                    b.Property<decimal?>("Ssll8")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL8");

                    b.Property<decimal?>("Ssll9")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("SSLL9");

                    b.Property<DateTime?>("TStime")
                        .HasColumnType("datetime")
                        .HasColumnName("T_STIME");

                    b.Property<decimal?>("Tn")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("TN");

                    b.Property<decimal?>("Toc")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("TOC");

                    b.Property<decimal?>("Tp")
                        .HasColumnType("decimal(12,6)")
                        .HasColumnName("TP");

                    b.HasKey("NId")
                        .HasName("PK_dbo.T_RTRPT_PUMP_HIS_HIS");

                    b.ToTable("T_RTRPT_PUMP_HIS_HIS", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.VSysRoleSysPerson", b =>
                {
                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Des")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("MobilePhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("role_id");

                    b.Property<string>("RoleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SCompany")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("s_company");

                    b.Property<string>("STownid")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("S_TOWNID");

                    b.Property<string>("STownname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("s_townname");

                    b.Property<string>("SysPersonId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysRoleId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.ToView("V_SysRoleSysPerson");
                });

            modelBuilder.Entity("SysDocumentSysDepartment", b =>
                {
                    b.Property<string>("SysDepartmentId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("Sys_Id");

                    b.HasKey("SysDepartmentId", "SysId")
                        .HasName("PK_SYSDOCUMENTSYSDEPARTMENT");

                    b.HasIndex("SysId");

                    b.ToTable("SysDocumentSysDepartment", (string)null);
                });

            modelBuilder.Entity("SysDocumentSysPerson", b =>
                {
                    b.Property<string>("SysPersonId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysSysDocumentIdId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("SysSysDocumentId_Id");

                    b.HasKey("SysPersonId", "SysSysDocumentIdId")
                        .HasName("PK_SYSDOCUMENTSYSPERSON");

                    b.HasIndex("SysSysDocumentIdId");

                    b.ToTable("SysDocumentSysPerson", (string)null);
                });

            modelBuilder.Entity("SysMenuSysOperation", b =>
                {
                    b.Property<string>("SysMenuId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SysOperationId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("SysMenuId", "SysOperationId")
                        .HasName("PK_SYSMENUSYSOPERATION");

                    b.HasIndex("SysOperationId");

                    b.ToTable("SysMenuSysOperation", (string)null);
                });

            modelBuilder.Entity("Furion.Core.Models.SysDepartment", b =>
                {
                    b.HasOne("Furion.Core.Models.SysDepartment", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_SYSDEPAR_REFERENCE_SYSDEPAR");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Furion.Core.Models.SysDocumentTalk", b =>
                {
                    b.HasOne("Furion.Core.Models.SysDocument", "SysDocument")
                        .WithMany("SysDocumentTalks")
                        .HasForeignKey("SysDocumentId")
                        .HasConstraintName("FK_SYSDOCUM_REFERENCE_SYSDOCUM");

                    b.Navigation("SysDocument");
                });

            modelBuilder.Entity("Furion.Core.Models.SysEmail", b =>
                {
                    b.HasOne("Furion.Core.Models.SysEmailTemp", "SysMail")
                        .WithMany("SysEmails")
                        .HasForeignKey("SysMailId")
                        .HasConstraintName("FK_SYSEMAIL_REFERENCE_SYSEMAIL");

                    b.Navigation("SysMail");
                });

            modelBuilder.Entity("Furion.Core.Models.SysField", b =>
                {
                    b.HasOne("Furion.Core.Models.SysField", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_SYSFIELD_REFERENCE_SYSFIELD");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Furion.Core.Models.SysMenu", b =>
                {
                    b.HasOne("Furion.Core.Models.SysMenu", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_SYSMENU_REFERENCE_SYSMENU");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Furion.Core.Models.SysMenuSysRoleSysOperation", b =>
                {
                    b.HasOne("Furion.Core.Models.SysMenu", "SysMenu")
                        .WithMany("SysMenuSysRoleSysOperations")
                        .HasForeignKey("SysMenuId")
                        .HasConstraintName("FK_SYSMENUS_REFERENCE_SYSMENU2");

                    b.HasOne("Furion.Core.Models.SysOperation", "SysOperation")
                        .WithMany("SysMenuSysRoleSysOperations")
                        .HasForeignKey("SysOperationId")
                        .HasConstraintName("FK_SYSMENUS_REFERENCE_SYSOPERA2");

                    b.HasOne("Furion.Core.Models.SysRole", "SysRole")
                        .WithMany("SysMenuSysRoleSysOperations")
                        .HasForeignKey("SysRoleId")
                        .HasConstraintName("FK_SYSMENUS_REFERENCE_SYSROLE");

                    b.Navigation("SysMenu");

                    b.Navigation("SysOperation");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("Furion.Core.Models.SysMessage", b =>
                {
                    b.HasOne("Furion.Core.Models.SysMessageTemp", "SysMessageTemp")
                        .WithMany("SysMessages")
                        .HasForeignKey("SysMessageTempId")
                        .HasConstraintName("FK_SYSMESSA_REFERENCE_SYSMESSA");

                    b.Navigation("SysMessageTemp");
                });

            modelBuilder.Entity("Furion.Core.Models.SysPerson", b =>
                {
                    b.HasOne("Furion.Core.Models.SysDepartment", "SysDepartment")
                        .WithMany("SysPeople")
                        .HasForeignKey("SysDepartmentId")
                        .HasConstraintName("FK_SYSPERSO_REFERENCE_SYSDEPAR");

                    b.Navigation("SysDepartment");
                });

            modelBuilder.Entity("Furion.Core.Models.SysRoleSysPerson", b =>
                {
                    b.HasOne("Furion.Core.Models.SysPerson", "SysPerson")
                        .WithMany()
                        .HasForeignKey("SysPersonId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSROLES_REFERENCE_SYSPERSO");

                    b.HasOne("Furion.Core.Models.SysRole", "SysRole")
                        .WithMany()
                        .HasForeignKey("SysRoleId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSROLES_REFERENCE_SYSROLE");

                    b.Navigation("SysPerson");

                    b.Navigation("SysRole");
                });

            modelBuilder.Entity("SysDocumentSysDepartment", b =>
                {
                    b.HasOne("Furion.Core.Models.SysDepartment", null)
                        .WithMany()
                        .HasForeignKey("SysDepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSDOCUM_REFERENCE_SYSDEPAR");

                    b.HasOne("Furion.Core.Models.SysDocument", null)
                        .WithMany()
                        .HasForeignKey("SysId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSDOCUM_REFERENCE_SYSDOCUM2");
                });

            modelBuilder.Entity("SysDocumentSysPerson", b =>
                {
                    b.HasOne("Furion.Core.Models.SysPerson", null)
                        .WithMany()
                        .HasForeignKey("SysPersonId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSDOCUM_REFERENCE_SYSPERSO");

                    b.HasOne("Furion.Core.Models.SysDocument", null)
                        .WithMany()
                        .HasForeignKey("SysSysDocumentIdId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSDOCUM_REFERENCE_SYSDOCUM3");
                });

            modelBuilder.Entity("SysMenuSysOperation", b =>
                {
                    b.HasOne("Furion.Core.Models.SysMenu", null)
                        .WithMany()
                        .HasForeignKey("SysMenuId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSMENUS_REFERENCE_SYSMENU");

                    b.HasOne("Furion.Core.Models.SysOperation", null)
                        .WithMany()
                        .HasForeignKey("SysOperationId")
                        .IsRequired()
                        .HasConstraintName("FK_SYSMENUS_REFERENCE_SYSOPERA");
                });

            modelBuilder.Entity("Furion.Core.Models.SysDepartment", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("SysPeople");
                });

            modelBuilder.Entity("Furion.Core.Models.SysDocument", b =>
                {
                    b.Navigation("SysDocumentTalks");
                });

            modelBuilder.Entity("Furion.Core.Models.SysEmailTemp", b =>
                {
                    b.Navigation("SysEmails");
                });

            modelBuilder.Entity("Furion.Core.Models.SysField", b =>
                {
                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("Furion.Core.Models.SysMenu", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("SysMenuSysRoleSysOperations");
                });

            modelBuilder.Entity("Furion.Core.Models.SysMessageTemp", b =>
                {
                    b.Navigation("SysMessages");
                });

            modelBuilder.Entity("Furion.Core.Models.SysOperation", b =>
                {
                    b.Navigation("SysMenuSysRoleSysOperations");
                });

            modelBuilder.Entity("Furion.Core.Models.SysRole", b =>
                {
                    b.Navigation("SysMenuSysRoleSysOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
